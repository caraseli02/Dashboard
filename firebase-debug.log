[debug] [2021-04-09T11:11:44.579Z] ----------------------------------------------------------------------
[debug] [2021-04-09T11:11:44.583Z] Command:       /usr/local/Cellar/node/15.11.0/bin/node /usr/local/bin/firebase deploy -P default
[debug] [2021-04-09T11:11:44.584Z] CLI Version:   8.16.2
[debug] [2021-04-09T11:11:44.584Z] Platform:      darwin
[debug] [2021-04-09T11:11:44.584Z] Node Version:  v15.11.0
[debug] [2021-04-09T11:11:44.586Z] Time:          Fri Apr 09 2021 13:11:44 GMT+0200 (Central European Summer Time)
[debug] [2021-04-09T11:11:44.586Z] ----------------------------------------------------------------------
[debug] [2021-04-09T11:11:44.586Z] 
[debug] [2021-04-09T11:11:44.601Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-04-09T11:11:44.602Z] > authorizing via signed-in user
[debug] [2021-04-09T11:11:44.603Z] [iam] checking project apimosa-930ed for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get","firebasehosting.sites.update"]
[debug] [2021-04-09T11:11:44.608Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-04-09T11:11:44.608Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-04-09T11:11:44.904Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","pragma":"no-cache","date":"Fri, 09 Apr 2021 11:11:44 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-09T11:11:44.922Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/apimosa-930ed:testIamPermissions  
 {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get","firebasehosting.sites.update"]}
[debug] [2021-04-09T11:11:45.840Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:45 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=545","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-09T11:11:45.844Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/apimosa-930ed  
 
[debug] [2021-04-09T11:11:46.228Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:46 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] === Deploying to 'apimosa-930ed'...
[info] 
[info] i  deploying firestore, hosting 
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2021-04-09T11:11:46.237Z] >>> HTTP REQUEST POST https://firebaserules.googleapis.com/v1/projects/apimosa-930ed:test  
 {"source":{"files":[{"name":"firestore.rules","content":"service cloud.firestore {\n  match /databases/{database}/documents {\n  \tfunction isAdmin() {\n      \treturn get(/databases/$(database)/documents/attendanceUsers/$(request.auth.uid)).data.isAdmin == true;\n      }\n    // helper functions\n    function isDocOwner(){\n      return request.auth.uid == resource.data.author;  \t\n    }\n    \n\t\tfunction isStaff(){\n      return request.auth.token.email.matches('.*apimosa[.]es$') && request.auth.token.email_verified;\n    }\n     match /attendance/{document} {\n      allow read: if (isDocOwner() && isSignedIn()) || isAdmin() || isStaff();\n      allow create: if isSignedIn() || isAdmin() || isStaff();\n      allow update: if isAdmin() || isStaff();\n      allow delete: if isAdmin() || isStaff();\n    }\n\n    match /attendanceUsers/{document} {\n      allow write: if isSignedIn();\n      allow read, update: if isDocOwner() || isAdmin() || isStaff();\n    }\n  }\n\n  // helper functions\n  function isDocOwner(){\n  // assuming document has a field author which is uid\n  // Only the authenticated user who authored the document can read or write\n  return request.auth.uid == resource.data.author;\n  // This above read query will fail\n  // The query fails even if the current user actually is the author of every story document.\n  // The reason for this behavior is that when Cloud Firestore applies your security rules,\n  // it evaluates the query against its potential result set,\n  // not against the actual properties of documents in your database.\n  // If a query could potentially include documents that violate your security rules,\n  // the query will fail.\n  // on your client app, make sure to include following\n  // .where(\"author\", \"==\", this.afAuth.auth.currentUser.uid)\n  \n  \t\n  }\n  function isSignedIn() {\n  // check if user is signed in\n  return request.auth.uid != null;\n  }\n  function isAdmin() {\n  return get(/databases/$(database)/documents/attendanceUsers/$(request.auth.uid)).data.isAdmin == true;\n  }\n}"}]}}
[debug] [2021-04-09T11:11:47.128Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:47 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[warn] ⚠  [W] undefined:undefined - Ruleset uses old version (version [1]). Please update to the latest version (version [2]). 
[warn] ⚠  [W] 28:12 - Unused function: isDocOwner. 
[warn] ⚠  [W] 31:10 - Invalid variable name: request. 
[warn] ⚠  [W] 31:30 - Invalid variable name: resource. 
[warn] ⚠  [W] 48:12 - Unused function: isAdmin. 
[warn] ⚠  [W] 49:10 - Invalid function name: get. 
[warn] ⚠  [W] 49:27 - Invalid variable name: database. 
[warn] ⚠  [W] 49:65 - Invalid variable name: request. 
[info] ✔  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2021-04-09T11:11:47.136Z] >>> HTTP REQUEST POST https://firebasehosting.googleapis.com/v1beta1/sites/apimosa-930ed/versions  
 {"config":{"rewrites":[{"glob":"**","path":"/index.html"}],"headers":[{"glob":"/build/app/**","headers":{"Cache-Control":"public, max-age=0"}}]},"labels":{"deployment-tool":"cli-firebase"}}
[debug] [2021-04-09T11:11:49.741Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:49 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-09T11:11:49.748Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/apimosa-930ed/releases?pageSize=10&pageToken=  
 
[debug] [2021-04-09T11:11:49.749Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/apimosa-930ed/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-04-09T11:11:50.100Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:50 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-09T11:11:50.102Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/apimosa-930ed/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-04-09T11:11:50.288Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:50 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  firestore: The following indexes are defined in your project but are not present in your firestore indexes file:
	(attendance) -- (data.gpsData.County,ASCENDING) (delete_flag,ASCENDING) (curentTime,DESCENDING) 
	(attendance) -- (data.gpsData.City,ASCENDING) (data.gpsData.County,ASCENDING) (delete_flag,ASCENDING) (curentTime,DESCENDING) 
	(attendance) -- (data.gpsData.County,ASCENDING) (delete_flag,ASCENDING) (curentTime,ASCENDING) 
	(attendance) -- (data.gpsData.City,ASCENDING) (delete_flag,ASCENDING) (curentTime,DESCENDING)  
[debug] [2021-04-09T11:11:50.490Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:50 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-09T11:11:50.493Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/apimosa-930ed/rulesets/73a50868-1527-4beb-822d-b3113c984f46  
 
[debug] [2021-04-09T11:11:51.250Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 09 Apr 2021 11:11:51 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  firestore: latest version of firestore.rules already up to date, skipping upload... 
